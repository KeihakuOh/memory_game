
①echo 'eval "$(nodenv init -)"' >> ~/.zshrc
source ~/.zshrc

 echo 'eval "$(nodenv init -)"' >> ~/.zshrc
このコマンドは、nodenv の初期化スクリプトを .zshrc ファイルの末尾に追加する。.zshrc ファイルは、Zsh シェルが起動する際に実行される設定ファイル。このファイルに nodenv の初期化コマンドを追加することで、Zsh シェルが起動するたびに nodenv が自動的に初期化される。

echo 'eval "$(nodenv init -)"'：eval "$(nodenv init -)" というテキストを標準出力する。
>> ~/.zshrc：標準出力を .zshrc ファイルに追加する。
2. source ~/.zshrc
このコマンドは、~/.zshrc ファイルを再読み込み。これにより、追加した nodenv の初期化スクリプトが現在のシェルセッションに適用される。

source：指定したファイルを現在のシェルセッションで実行する。
~/.zshrc：Zsh シェルの設定ファイル。

②npm は Node.js のパッケージマネージャーで、パッケージの管理、インストール、アンインストール、バージョン管理などを行うツール
npx は npm バージョン 5.2.0 以降に同梱されているツールで、ローカルまたはグローバルにインストールされていないパッケージをその場で実行できるツール

③node_modules フォルダは、npm install コマンドを実行することで自動的に作成される。このコマンドは、package.json ファイルに記述された依存関係を基に、必要なパッケージをすべてインストールする

④lsコマンド入力→シェルは入力を解析しlsの実行ファイルを見つける→lsの実行ファイルはcで書かれている→cのコンバイラにより機械語→カーネルが実行


square = function(n) {
  return n * n;
};
console.log(square(5)); // 出力: 25

varは変数、再代入可能。　const定数、再代入不可

useStateフックはreactのもの [state, setState] = useState(initialState); 
stateは状態、setstateは状態を変える、initialStateは初期状態。initialStateが文字列、数値、オブジェクトの場合によって関数は変わる。

従来の関数
function multiply(a, b) {
  return a * b;
}
アロー関数
const multiply = (a, b) => a * b;
const c = multiply(2, 3)　//6

numbers.sort(() => Math.random() - 0.5);
Array.prototype.sort()メソッドは、比較関数を引数として取るメソッド　ここで渡した比較関数は() => Math.random() - 0.5
const numbers = [1, 2, 3, 4, 5];
numbers.sort((a, b) => b - a);
console.log(numbers); // [5, 4, 3, 2, 1]